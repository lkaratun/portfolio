{"version":3,"sources":["app.js"],"names":["navBar","document","querySelector","navBarHeight","getBoundingClientRect","height","navLinks","querySelectorAll","forEach","addEventListener","handleNavigationClick","sectionsCoords","sections","push","section","offsetTop","id","style","sectionsBreakpoints","i","length","handleScroll","breakpointIndex","window","scrollY","downArrow","handleArrowClick","scrollTarget","e","target","getAttribute","highlightLink","textDecoration","restoreLinksAppearance","links","onscroll","setNavBarVisibility","scrollThreshold","innerHeight","pageYOffset","top","smoothScroll","duration","targetPosition","startPosition","startTime","requestAnimationFrame","animation","currentTime","timeElapsed","t","run","d","scrollTo"],"mappings":";AAAA,IAAMA,EAASC,SAASC,cAAc,WAChCC,EAAeH,EAAOI,wBAAwBC,OAC9CC,EAAWL,SAASM,iBAAiB,gBAE3CD,EAASE,QAAQ,SAAQ,GAClBC,EAAAA,iBAAiB,QAASC,KAGjC,IAAMC,EAAiB,GAEjBC,EAAWX,SAASM,iBAAiB,WAC3CK,EAASJ,QAAQ,SAAW,GACXK,EAAAA,KAAKC,EAAQC,WACT,SAAfD,EAAQE,KACFC,EAAAA,MAAMZ,OAAYS,EAAQV,wBAAwBC,OAASF,EAAnE,QAIJ,IADA,IAAMe,EAAsB,GACnBC,EAAI,EAAGA,EAAIR,EAAeS,OAAS,EAAGD,IACzBN,EAAAA,MAAMF,EAAeQ,GAAKR,EAAeQ,EAAI,IAAM,GAIzE,SAASE,IACF,IAAA,IAAIC,EAAkB,EAAGA,EAAkBJ,EAAoBE,OAAQE,IACtEC,GAAAA,OAAOC,QAAUN,EAAoBI,GAEvC,YADchB,EAAAA,EAASgB,IAIbhB,EAAAA,EAASY,EAAoBE,SAG7C,IAAMK,EAAYxB,SAASC,cAAc,cAMzC,SAASwB,IACOzB,EAAAA,SAASC,cAAc,gBAExByB,EADQ1B,SAASC,cAAc,UACjB,KAG7B,SAASQ,EAAsBkB,GACfA,EAAAA,EAAEC,QAEHF,EADQ1B,SAASC,cAAc0B,EAAEC,OAAOC,aAAa,SACvC,KAG7B,SAASC,EAAcF,GACEvB,EAAAA,GAChBW,EAAAA,MAAMe,eAAiB,YAEhC,SAASC,EAAuBC,GACxB1B,EAAAA,QAAQ,SAAQ,GAAOS,EAAAA,MAAMe,eAAiB,SAtBtDP,EAAUhB,iBAAiB,QAASiB,GA6BpCH,OAAOY,SAAW,WAChBC,IACAf,KAEF,IAAMgB,EAAkBd,OAAOe,YAAc,EAC7C,SAASF,IACHb,OAAOgB,YAAcF,EAChBpB,EAAAA,MAAMuB,IAAM,IAGZvB,EAAAA,MAAMuB,IAAUrC,IAAAA,EAAvB,KAIJ,SAASsC,EAAaZ,EAAQa,GACtBC,IAAAA,EAAiBd,EAAOzB,wBAAwBoC,IAAMrC,EACtDyC,EAAgBrB,OAAOgB,YACzBM,EAAY,KAcTC,OAAAA,sBAbEC,SAAAA,EAAUC,GACC,OAAdH,IAAkCG,EAAAA,GAChCC,IAMaC,EANbD,EAAcD,EAAcH,EAC5BM,GAKaD,EALKD,GAA4BN,GAM/CS,GAN+DV,IAOnDQ,EAAI,GAPgBN,GAC9BS,OAAAA,SAAS,EAAGF,GACfF,EAAcP,GAAmBI,OAAAA,sBAAsBC","file":"app.3905a1d7.map","sourceRoot":"..","sourcesContent":["const navBar = document.querySelector(\"#navbar\");\r\nconst navBarHeight = navBar.getBoundingClientRect().height;\r\nconst navLinks = document.querySelectorAll(\".scroll-link\");\r\n\r\nnavLinks.forEach(link => {\r\n  link.addEventListener(\"click\", handleNavigationClick);\r\n});\r\n\r\nconst sectionsCoords = [];\r\n\r\nconst sections = document.querySelectorAll(\"section\");\r\nsections.forEach(section => {\r\n  sectionsCoords.push(section.offsetTop);\r\n  if (section.id !== \"home\") {\r\n    section.style.height = `${section.getBoundingClientRect().height - navBarHeight}px`;\r\n  }\r\n});\r\nconst sectionsBreakpoints = [];\r\nfor (let i = 0; i < sectionsCoords.length - 1; i++) {\r\n  sectionsBreakpoints.push((sectionsCoords[i] + sectionsCoords[i + 1]) / 2);\r\n}\r\n\r\n\r\nfunction handleScroll() {\r\n  for (let breakpointIndex = 0; breakpointIndex < sectionsBreakpoints.length; breakpointIndex++) {\r\n    if (window.scrollY < sectionsBreakpoints[breakpointIndex]) {\r\n      highlightLink(navLinks[breakpointIndex]);\r\n      return;\r\n    }\r\n  }\r\n  highlightLink(navLinks[sectionsBreakpoints.length]);\r\n}\r\n\r\nconst downArrow = document.querySelector(\"#downArrow\");\r\ndownArrow.addEventListener(\"click\", handleArrowClick);\r\n\r\n\r\n\r\n\r\nfunction handleArrowClick() {\r\n  highlightLink(document.querySelector(\"#about-link\"));\r\n  const scrollTarget = document.querySelector(\"#about\");\r\n  smoothScroll(scrollTarget, 300);\r\n}\r\n\r\nfunction handleNavigationClick(e) {\r\n  highlightLink(e.target);\r\n  const scrollTarget = document.querySelector(e.target.getAttribute(\"href\"));\r\n  smoothScroll(scrollTarget, 300);\r\n}\r\n\r\nfunction highlightLink(target) {\r\n  restoreLinksAppearance(navLinks);\r\n  target.style.textDecoration = \"underline\";\r\n}\r\nfunction restoreLinksAppearance(links) {\r\n  links.forEach(link => { link.style.textDecoration = \"none\"; });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nwindow.onscroll = () => {\r\n  setNavBarVisibility();\r\n  handleScroll();\r\n};\r\nconst scrollThreshold = window.innerHeight / 4;\r\nfunction setNavBarVisibility() {\r\n  if (window.pageYOffset > scrollThreshold) {\r\n    navBar.style.top = \"0\";\r\n  }\r\n  else {\r\n    navBar.style.top = `-${navBarHeight}px`;\r\n  }\r\n}\r\n\r\nfunction smoothScroll(target, duration) {\r\n  const targetPosition = target.getBoundingClientRect().top - navBarHeight;\r\n  const startPosition = window.pageYOffset;\r\n  let startTime = null;\r\n  function animation(currentTime) {\r\n    if (startTime === null) { startTime = currentTime; }\r\n    const timeElapsed = currentTime - startTime;\r\n    const run = easeOutQuad(timeElapsed, startPosition, targetPosition, duration);\r\n    window.scrollTo(0, run);\r\n    if (timeElapsed < duration) { window.requestAnimationFrame(animation); }\r\n  }\r\n\r\n  function easeOutQuad(t, b, c, d) {\r\n    t /= d;\r\n    return -c * t * (t - 2) + b;\r\n  };\r\n\r\n  window.requestAnimationFrame(animation);\r\n}"]}