{"version":3,"sources":["app.js"],"names":["navBar","navLinks","sectionsBreakpoints","currentSectionIndex","setUpSectionDimensions","sections","document","querySelectorAll","sectionsCoords","forEach","section","navBarHeight","getBoundingClientRect","height","push","offsetTop","id","style","minHeight","i","length","handleScroll","correctSectionIndex","determineCorrectSectionIndex","highlightLink","breakpointIndex","window","scrollY","handleArrowClick","e","preventDefault","querySelector","smoothScrollNative","handleNavigationClick","target","getAttribute","restoreLinksAppearance","textDecoration","links","link","addEventListener","onscroll","setNavBarVisibility","scrollThreshold","innerHeight","pageYOffset","top","targetPosition","scroll","behavior","enlargeScreenshot","parent","parentElement","classList","toggle","oldUrl","newUrl","replace","setAttribute","element","node"],"mappings":";;;;;AAgHA,aA7GA,IAAIA,EACAC,EAJJ,QAAA,qBACA,QAAA,wBAIA,MAAMC,EAAsB,GAC5B,IAAIC,EAAsB,KAqB1B,SAASC,IACDC,MAAAA,EAAWC,SAASC,iBAAiB,WACrCC,EAAiB,GACvBH,EAASI,QAAQC,IACTC,MAAAA,EAAeX,EAAOY,wBAAwBC,OACpDL,EAAeM,KAAKJ,EAAQK,WACT,SAAfL,EAAQM,KACVN,EAAQO,MAAMC,aAAeR,EAAQE,wBAAwBC,OAASF,SAGrE,IAAA,IAAIQ,EAAI,EAAGA,EAAIX,EAAeY,OAAS,EAAGD,IAC7CjB,EAAoBY,MAAMN,EAAeW,GAAKX,EAAeW,EAAI,IAAM,GAI3E,SAASE,IACDC,MAAAA,EAAsBC,IACxBpB,IAAwBmB,IAC1BE,EAAcvB,EAASqB,IACvBnB,EAAsBmB,GAI1B,SAASC,IACF,IAAA,IAAIE,EAAkB,EAAGA,EAAkBvB,EAAoBkB,OAAQK,IACtEC,GAAAA,OAAOC,QAAUzB,EAAoBuB,GAChCA,OAAAA,EAGJvB,OAAAA,EAAoBkB,OAG7B,SAASQ,EAAiBC,GACxBA,EAAEC,iBACFN,EAAclB,SAASyB,cAAc,gBAErCC,EADqB1B,SAASyB,cAAc,WAI9C,SAASE,EAAsBJ,GAC7BA,EAAEC,iBACFN,EAAcK,EAAEK,QAEhBF,EADqB1B,SAASyB,cAAcF,EAAEK,OAAOC,aAAa,UAIpE,SAASX,EAAcU,GACrBE,EAAuBnC,GACvBiC,EAAOjB,MAAMoB,eAAiB,YAEhC,SAASD,EAAuBE,GAC9BA,EAAM7B,QAAQ8B,IACZA,EAAKtB,MAAMoB,eAAiB,SAvEhC/B,SAASkC,iBAAiB,mBAAoB,KAC5CxC,EAASM,SAASyB,cAAc,YAChC9B,EAAWK,SAASC,iBAAiB,iBAE5BE,QAAQ8B,IACfA,EAAKC,iBAAiB,QAASP,KAEf3B,SAASyB,cAAc,cAC/BS,iBAAiB,QAASZ,KAGtCF,OAAOc,iBAAiB,OAAQ,KAC9Bd,OAAOe,SAAW,MAChBC,IACArB,MAEFjB,MA2DF,MAAMuC,EAAkBjB,OAAOkB,YAAc,EAC7C,SAASF,IACD/B,MAAAA,EAAeX,EAAOY,wBAAwBC,OAChDa,OAAOmB,YAAcF,EACvB3C,EAAOiB,MAAM6B,IAAM,IAEnB9C,EAAOiB,MAAM6B,QAAUnC,MAI3B,SAASqB,EAAmBE,GACpBvB,MAAAA,EAAeX,EAAOY,wBAAwBC,OAC9CkC,EAAiBb,EAAOtB,wBAAwBkC,IAAMnC,EAC5De,OAAOsB,OAAO,CACZF,IAAKpB,OAAOmB,YAAcE,EAC1BE,SAAU,WAId,SAASC,EAAkBrB,GACnBsB,MAAAA,EAAStB,EAAEK,OAAOkB,cACxBD,EAAOE,UAAUC,OAAO,YAElBC,MACAC,EADSL,EAAOpB,cAAc,eAAeI,aAAa,OAC1CsB,QAAQ,gBAAiB,WAC/CN,EAAOpB,cAAc,eAAe2B,aAAa,MAAOF,GACxDL,EAAO5C,iBAAiB,YAAYE,QAAQkD,GAAWA,EAAQN,UAAUC,OAAO,WAGlFhD,SACGC,iBAAiB,aACjBE,QAAQmD,GAAQA,EAAKpB,iBAAiB,QAASX,GAAKqB,EAAkBrB","file":"app.4a1fac93.map","sourceRoot":"..","sourcesContent":["import \"./scss/style.scss\";\r\nimport \"./scss/readMore.scss\";\r\n\r\nlet navBar;\r\nlet navLinks;\r\nconst sectionsBreakpoints = [];\r\nlet currentSectionIndex = null;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  navBar = document.querySelector(\"#navbar\");\r\n  navLinks = document.querySelectorAll(\".scroll-link\");\r\n\r\n  navLinks.forEach(link => {\r\n    link.addEventListener(\"click\", handleNavigationClick);\r\n  });\r\n  const downArrow = document.querySelector(\"#downArrow\");\r\n  downArrow.addEventListener(\"click\", handleArrowClick);\r\n});\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  window.onscroll = () => {\r\n    setNavBarVisibility();\r\n    handleScroll();\r\n  };\r\n  setUpSectionDimensions();\r\n});\r\n\r\nfunction setUpSectionDimensions() {\r\n  const sections = document.querySelectorAll(\"section\");\r\n  const sectionsCoords = [];\r\n  sections.forEach(section => {\r\n    const navBarHeight = navBar.getBoundingClientRect().height;\r\n    sectionsCoords.push(section.offsetTop);\r\n    if (section.id !== \"home\") {\r\n      section.style.minHeight = `${section.getBoundingClientRect().height - navBarHeight}px`;\r\n    }\r\n  });\r\n  for (let i = 0; i < sectionsCoords.length - 1; i++) {\r\n    sectionsBreakpoints.push((sectionsCoords[i] + sectionsCoords[i + 1]) / 2);\r\n  }\r\n}\r\n\r\nfunction handleScroll() {\r\n  const correctSectionIndex = determineCorrectSectionIndex();\r\n  if (currentSectionIndex !== correctSectionIndex) {\r\n    highlightLink(navLinks[correctSectionIndex]);\r\n    currentSectionIndex = correctSectionIndex;\r\n  }\r\n}\r\n\r\nfunction determineCorrectSectionIndex() {\r\n  for (let breakpointIndex = 0; breakpointIndex < sectionsBreakpoints.length; breakpointIndex++) {\r\n    if (window.scrollY < sectionsBreakpoints[breakpointIndex]) {\r\n      return breakpointIndex;\r\n    }\r\n  }\r\n  return sectionsBreakpoints.length;\r\n}\r\n\r\nfunction handleArrowClick(e) {\r\n  e.preventDefault();\r\n  highlightLink(document.querySelector(\"#about-link\"));\r\n  const scrollTarget = document.querySelector(\"#about\");\r\n  smoothScrollNative(scrollTarget);\r\n}\r\n\r\nfunction handleNavigationClick(e) {\r\n  e.preventDefault();\r\n  highlightLink(e.target);\r\n  const scrollTarget = document.querySelector(e.target.getAttribute(\"href\"));\r\n  smoothScrollNative(scrollTarget);\r\n}\r\n\r\nfunction highlightLink(target) {\r\n  restoreLinksAppearance(navLinks);\r\n  target.style.textDecoration = \"underline\";\r\n}\r\nfunction restoreLinksAppearance(links) {\r\n  links.forEach(link => {\r\n    link.style.textDecoration = \"none\";\r\n  });\r\n}\r\n\r\nconst scrollThreshold = window.innerHeight / 4;\r\nfunction setNavBarVisibility() {\r\n  const navBarHeight = navBar.getBoundingClientRect().height;\r\n  if (window.pageYOffset > scrollThreshold) {\r\n    navBar.style.top = \"0\";\r\n  } else {\r\n    navBar.style.top = `-${navBarHeight}px`;\r\n  }\r\n}\r\n\r\nfunction smoothScrollNative(target) {\r\n  const navBarHeight = navBar.getBoundingClientRect().height;\r\n  const targetPosition = target.getBoundingClientRect().top - navBarHeight;\r\n  window.scroll({\r\n    top: window.pageYOffset + targetPosition,\r\n    behavior: \"smooth\"\r\n  });\r\n}\r\n\r\nfunction enlargeScreenshot(e) {\r\n  const parent = e.target.parentElement;\r\n  parent.classList.toggle(\"expanded\");\r\n\r\n  const oldUrl = parent.querySelector(\".screenshot\").getAttribute(\"src\");\r\n  const newUrl = oldUrl.replace(\"/upload/w_600\", \"/upload\");\r\n  parent.querySelector(\".screenshot\").setAttribute(\"src\", newUrl);\r\n  parent.querySelectorAll(\"img.icon\").forEach(element => element.classList.toggle(\"hidden\"));\r\n}\r\n\r\ndocument\r\n  .querySelectorAll(\"aside>img\")\r\n  .forEach(node => node.addEventListener(\"click\", e => enlargeScreenshot(e)));\r\n"]}